if 'outdir' not in config:
    config['outdir'] = 'output'

import re

geno_prefix = config['genotype']['bed']
geno_prefix = re.sub('.bed', '', geno_prefix)
add_ldm_opt = ''
if config['ldm_mode'] == 'band' and 'ldm_wind' in config:
    add_ldm_opt = '--wind {}'.format(config['ldm_wind'])
other_opts = ''
if 'ldm_option' in config:
    other_opts = ' '.join(config['ldm_option'])

rule all:
    input:
        '{outdir}/{geno_tag}_{gwas_tag}.parRes'.format(**config)

rule all_gwas:
    input:
        config['formated_gwas'].format(**config)

if 'chr_num' in config:
    rule all_ldm_chr:
        input:
            config['ldm_prefix'].format(**config) + '.ldm.' + config['ldm_mode'] + '.bin' 
    

def load_files_w_wildcard(str_):
    fn = str_
    pat = str_
    if '{chr_num}' in str_:
        fn = [ re.sub('{chr_num}', str(i), str_) for i in range(1, 23) ]
        tmp = str_.split('{chr_num}')
        pat = tmp[0] + 'CHRNUM' + tmp[1]
    return fn, pat
gwas_parquet, gwas_pattern = load_files_w_wildcard(config['gwas_parquet'])
geno_bim, bim_pattern = load_files_w_wildcard(config['genotype']['bim'])

rule format_gwas:
    '''
    Example GWAS format:
    SNP A1 A2 freq b se p n
    rs131538 A G 0.0661375661375661 -0.2008 0.142108987968861 0.1584 378
    rs9605903 C T 0.264550264550265 0.1024 0.0856903765690377 0.2327 378
    '''
    input:
        gwas_parquet = gwas_parquet,
        geno_bim = geno_bim
    params:
        gwas_pattern = gwas_pattern,
        bim_pattern = bim_pattern
    output:
        gwas_sumstat = config['formated_gwas']
    shell:
        'python scripts/format_gwas.py \
           --parquet {params.gwas_pattern} \
           --geno_bim {params.bim_pattern} \
           --gwas_sample_size {config[sample_size]} \
           --output {output.gwas_sumstat}'

rule gen_ldm:
    '''
    Pre-compute LD matrix
    ldm_mode = sparse, full, band, shrunk
    '''
    input:
        geno = config['genotype']['bed']
    output:
        config['ldm_prefix'] + '.ldm.' + config['ldm_mode'] + '.bin',
        config['ldm_prefix'] + '.ldm.' + config['ldm_mode'] + '.info'
    params:
        ldm_option = '--make-{ldm_mode}-ldm'.format(ldm_mode=config['ldm_mode']),
        out_prefix = config['ldm_prefix'],
        geno_prefix = geno_prefix
    shell:
        '{config[gctb_exec]} \
           --bfile {params.geno_prefix} \
           {params.ldm_option} \
           {add_ldm_opt} \
           --out {params.out_prefix}'

if '{chr_num}' in config['ldm_prefix']:
    '''
    ldm per chromosome
    '''
    rule gen_mldm_list:
        input:
            ldms = [ re.sub('{chr_num}', str(i), config['ldm_prefix']) + '.ldm.' + config['ldm_mode'] + '.bin' for i in range(1, 23) ]
        output:
            '{outdir}/{geno_tag}_mldm.list'
        run:
            o = open(output[0], 'w')
            for f in input.ldms:
                o.write(re.sub('.bin$', '', f) + '\n')
            o.close
    ldm_file = '{outdir}/{geno_tag}_mldm.list'
    ldm_opt_in_gctb = '--mldm' 
    ldm_file_in_gctb = '{outdir}/{geno_tag}_mldm.list'
else:
    ldm_file = config['ldm_prefix'] + '.ldm.' + config['ldm_mode'] + '.bin'
    ldm_opt_in_gctb = '--ldm' 
    ldm_file_in_gctb = config['ldm_prefix'] + '.ldm.' + config['ldm_mode']

rule run_gctb:
    input:
        ldm = ldm_file,
        gwas = config['formated_gwas']
    output:
        '{outdir}/{geno_tag}_{gwas_tag}.mcmcsamples.Par',
        '{outdir}/{geno_tag}_{gwas_tag}.mcmcsamples.SnpEffects',
        '{outdir}/{geno_tag}_{gwas_tag}.parRes',
        '{outdir}/{geno_tag}_{gwas_tag}.snpRes'
    params:
        outprefix = '{outdir}/{geno_tag}_{gwas_tag}',
        ldm = ldm_file_in_gctb
    shell:
        '{config[gctb_exec]} \
           --sbayes S \
           {ldm_opt_in_gctb} {params.ldm} \
           --gwas-summary {input.gwas} \
           {other_opts} \
           --out {params.outprefix}'


rule all_ldm:
    input:
        ldm_file.format(**config)
        
