if 'outdir' not in config:
    config['outdir'] = 'output'

def get_genotypes(config):
    if 'genotypes' not in config:
        raise ValueError('Config needs genotypes entry.')
    if 'ped' in config['genotypes'] and 'map' in config['genotypes']:
        cmd = '--ped {} --map {}'.format(
            config['genotypes']['ped'],
            config['genotypes']['map']
        )
        files = [config['genotypes']['ped'], config['genotypes']['map']]
    else:
        raise ValueError('Not implement yet.')
    return cmd, files

genotype_command, genotype_files = get_genotypes(config)

rule all:
    input:
        '{outdir}/{name_tag}.no_ambiguity.pop_{pop_tag}_maf_{maf}.txt'.format(**config)

rule extract_individuals:
    input:
        indiv_list = config['individual_list']['file']
    output:
        '{outdir}/{name_tag}_pop_{pop_tag}.individual.txt'
    params:
        pop_col = config['individual_list']['pop_col'],
        indiv_col = config['individual_list']['indiv_col'],
        fam_col = config['individual_list']['fam_col']
    shell:
        'python extract.py \
            --input {input.indiv_list} \
            --colname {params.pop_col} \
            --output_cols {params.fam_col} {params.indiv_col} \
            --by {wildcards.pop_tag} \
            --output {output[0]}'

rule compute_maf:
    input:
        files = genotype_files,
        list = '{outdir}/{name_tag}_pop_{pop_tag}.individual.txt'
    output:
        '{outdir}/{name_tag}_pop_{pop_tag}.frq'
    params:
        '{outdir}/{name_tag}_pop_{pop_tag}'
    shell:
        '{config[plink1.9]} \
          {genotype_command} \
          --freq \
          --keep {input.list} \
          --memory {config[plink_mem_in_mb]} \
          --out {params[0]}'

rule filter_by_maf:
    input:
        '{outdir}/{name_tag}_pop_{pop_tag}.frq'
    output:
        '{outdir}/{name_tag}_pop_{pop_tag}_maf_{maf}.txt'
    shell:
        'python extract.py \
            --input {input[0]} \
            --colname MAF \
            --output_cols SNP \
            --mode maf \
            --by {wildcards.maf} \
            --output {output[0]}'

rule get_bim_file:
    input:
        files = genotype_files
    output:
        '{outdir}/{name_tag}_genotype.bim'
    params:
        '{outdir}/{name_tag}_genotype'
    shell:
        '{config[plink1.9]} \
          {genotype_command} \
          --make-just-bim \
          --out {params[0]}'

rule filter_by_ambiguity:
    input:
        '{outdir}/{name_tag}_genotype.bim',
        '{outdir}/{name_tag}_pop_{pop_tag}_maf_{maf}.txt'
    output:
        '{outdir}/{name_tag}.no_ambiguity.pop_{pop_tag}_maf_{maf}.txt'
    shell:
        'export PYTHONPATH={config[misc_tools_path]}/pyutil:$PYTHONPATH; python filter_out_ambiguious_snps.py \
            --input {input[1]} \
            --input_bim {input[0]} \
            --output {output[0]}'

