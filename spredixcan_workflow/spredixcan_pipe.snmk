if 'outdir' not in config:
    config['outdir'] = 'output'

if 'harmonization_type' not in config:
    harmonization_type = 'simple'
else:
    harmonization_type = config['harmonization_type']

def get_output_column_map_commands(in_dict):
    out = []
    for kk in in_dict.keys():
        val = in_dict[kk]
        out.append(f'-output_column_map {val} {kk}')
    return out

rule all:
    input:
        '{outdir}/spredixcan.{name_tag}.harmonization_{harmonization_type}.csv'.format(**config)

rule all_harmonization:
    input:
        '{outdir}/{name_tag}.harmonization_{harmonization_type}.txt.gz'.format(**config)

if harmonization_type == 'full':
    col_cmd = get_output_column_map_commands(config['gwas_columns'])
    rule harmonize:
        input:
            gwas = config['gwas_file']
        output:
            '{outdir}/{name_tag}.harmonization_{harmonization_type}.txt.gz'
        shell:
            'python {config[gwas_tool_path]}/gwas_parsing.py \
                -gwas_file {input.gwas} \
                -output {output[0]} \
                {config[full_extra_command]} \
                {col_cmd}'
elif harmonization_type == 'simple':
    if 'variant_id' in config['gwas_columns']:
        var_cmd = '--snp_column ' + config['gwas_columns']['variant_id']
    else:
        var_cmd = ''
    rule harmonize:
        input:
            gwas = config['gwas_file']
        output:
            '{outdir}/{name_tag}.harmonization_{harmonization_type}.txt.gz'
        shell:
            'python {config[metaxcan_path]}/M03_betas.py \
                --snp_map_file {config[snp_map]} \
                --gwas_file {input.gwas} \
                {var_cmd} \
                --non_effect_allele_column {config[gwas_columns][non_effect_allele]} \
                --effect_allele_column {config[gwas_columns][effect_allele]} \
                --beta_column {config[gwas_columns][effect_size]} \
                --pvalue_column {config[gwas_columns][pvalue]} \
                --keep_non_rsid \
                --throw \
                {config[simple_extra_command]} \
                --output {output[0]}'
            
rule spredixcan:
    input:
        gwas = '{outdir}/{name_tag}.harmonization_{harmonization_type}.txt.gz',
        db = config['predict_db'],
        cov = config['predict_db_cov']
    output:
        '{outdir}/spredixcan.{name_tag}.harmonization_{harmonization_type}.csv'
    shell:
        'python {config[metaxcan_path]}/SPrediXcan.py \
            --gwas_file {input[0]} \
            --snp_column panel_variant_id --effect_allele_column effect_allele --non_effect_allele_column non_effect_allele --zscore_column zscore \
            --model_db_path {input.db} \
            --covariance {input.cov} \
            {config[spredixcan_extra_command]} \
            --output_file {output[0]}'
            
            
