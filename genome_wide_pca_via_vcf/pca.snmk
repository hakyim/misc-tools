if 'outdir' not in config:
    config['outdir'] = 'output'
if 'grm_args' not in config:
    config['grm_args'] = ''
def make_option(key, config, option, fill=None):
    if key in config:
        o = option + ' ' + config[key]
    else:
        o = ''
        if fill is not None:
            config[key] = fill
    return o

sample_cmd = make_option('sample_list', config, '--keep')
gcta_threads = make_option('gcta_threads', config, '--threads', fill=1)
plink_threads = make_option('plink_threads', config, '--threads', fill=1)


chrom_list = config['chromosomes']

rule all:
    input:
        '{outdir}/{name_tag}.eigenvec'.format(**config)

rule grm_via_vcf:
    input:
        config['vcf']
    output:
        '{outdir}/{name_tag}/chr{chr_num}.grm',
        '{outdir}/{name_tag}/chr{chr_num}.grm.id'
    params:
        prefix = '{outdir}/{name_tag}/chr{chr_num}',
        more_args = config['grm_args']
    threads:
        config['plink_threads']
    shell:
        '{config[plink_exec]} --vcf {input[0]} {sample_cmd} {plink_threads} --make-grm-list {params.more_args} --out {params.prefix}'

rule grm_gzip: 
    input:
        '{outdir}/{name_tag}/chr{chr_num}.grm'
    output:
        '{outdir}/{name_tag}/chr{chr_num}.grm.gz'
    shell:
        'cat {input[0]} | gzip > {output[0]}'

rule mgrm_list:
    input:
        [ f'{{outdir}}/{{name_tag}}/chr{i}.grm.gz' for i in chrom_list ]
    output:
        '{outdir}/{name_tag}/mgrm_list.txt'
    shell:
        '''
        holder="{input}"
        for i in $holder
        do
          echo $i | sed "s/.grm.gz//g" >> {output[0]}
        done
        '''

rule pca:
    input:
        grm = [ f'{{outdir}}/{{name_tag}}/chr{i}.grm.gz' for i in chrom_list ],
        id = [ f'{{outdir}}/{{name_tag}}/chr{i}.grm.id' for i in chrom_list ],
        list = '{outdir}/{name_tag}/mgrm_list.txt'
    output:
        '{outdir}/{name_tag}.eigenvec',
        '{outdir}/{name_tag}.eigenval'
    threads:
        config['gcta_threads']
    params:
        '{outdir}/{name_tag}'
    shell:
        '{config[gcta_exec]} --mgrm-gz {input.list} {gcta_threads} --pca --out {params[0]}'

